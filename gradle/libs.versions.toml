[versions]
accompanist = "0.34.0"
agp = "8.5.2"
androidx_test = "1.6.2"
appcompat = "1.7.0"
benmanesversion = "0.51.0"
compose = "1.6.8"
compose_activity = "1.9.1"
compose_material3 = "1.2.1"
core_ktx = "1.13.1"
dagger = "2.52"
datastore = "1.1.1"
destinations = "1.10.2"
hilt_navigation = "1.2.0"
junit = "4.13.2"
junit_android = "1.2.1"
kotlin = "2.0.20"
kotlinx_coroutines = "1.8.1"
ksp = "2.0.20-1.0.24"
lifecycle = "2.8.4"
material = "1.12.0"
mockito = "5.4.0"
okhttp = "4.12.0"
play_review = "2.0.1"
retrofit = "2.11.0"
room = "2.6.1"
sdk_min = "26"
sdk_target = "34"
tikxml = "0.8.13"
timber = "5.0.1"

[libraries]
accompanist_flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanist" }
accompanist_uicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
androidx_appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx_core_ktx = { module = "androidx.core:core-ktx", version.ref = "core_ktx" }
androidx_test_runner = { module = "androidx.test:runner", version.ref = "androidx_test" }
compose_activity = { module = "androidx.activity:activity-compose", version.ref = "compose_activity" }
compose_icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose_material3 = { module = "androidx.compose.material3:material3", version.ref = "compose_material3" }
compose_tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose_ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger_compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
destinations = { module = "io.github.raamcosta.compose-destinations:animations-core", version.ref = "destinations" }
destinations_ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "destinations" }
hilt = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
hilt_compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger" }
hilt_navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt_navigation" }
junit = { module = "junit:junit", version.ref = "junit" }
junit_android = { module = "androidx.test.ext:junit", version.ref = "junit_android" }
kotlinx_coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx_coroutines" }
lifecycle_runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
material = { module = "com.google.android.material:material", version.ref = "material" }
mockito = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito" }
okhttp_tls = { module = "com.squareup.okhttp3:okhttp-tls", version.ref = "okhttp" }
play_review = { module = "com.google.android.play:review-ktx", version.ref = "play_review" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
room_ksp = { module = "androidx.room:room-compiler", version.ref = "room" }
room_ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room_runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room_testing = { module = "androidx.room:room-testing", version.ref = "room" }
tikxml_annotation = { module = "com.tickaroo.tikxml:annotation", version.ref = "tikxml" }
tikxml_core = { module = "com.tickaroo.tikxml:core", version.ref = "tikxml" }
tikxml_htmlescape = { module = "com.tickaroo.tikxml:converter-htmlescape", version.ref = "tikxml" }
tikxml_kapt = { module = "com.tickaroo.tikxml:processor", version.ref = "tikxml" }
tikxml_retrofit = { module = "com.tickaroo.tikxml:retrofit-converter", version.ref = "tikxml" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

[bundles]
compose = ["compose_activity", "compose_icons", "compose_material3", "compose_ui", "compose_tooling"]
room = ["room_ktx", "room_runtime"]
tikxml = ["tikxml_annotation", "tikxml_core", "tikxml_htmlescape", "tikxml_retrofit"]

[plugins]
agp = { id = "com.android.application", version.ref = "agp" }
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kgp = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }
versions = { id = "com.github.ben-manes.versions", version.ref = "benmanesversion" }
